{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".body{\\n  width: 100%;\\n  height: 100%;\\n  border-style: solid;\\n  border-width: thin;\\n}\\n.main{\\n  padding: 10% 0;\\n  text-align: center;\\n  margin: auto;\\n}\\n.motor{\\n\\n}\\n\"","module.exports = \"<div class=\\\"body\\\">\\n  <div class=\\\"main\\\">\\n    <div class=\\\"motor\\\">\\n      <button type=\\\"button\\\" (click)=\\\"step(-10,1)\\\" name=\\\"decrement1\\\"><b>-</b></button> motor1: 0 - <b>{{motor1PWMModifier}}</b> - 100 <button type=\\\"button\\\" (click)=\\\"step(10,1)\\\" name=\\\"increment1\\\"><b>+</b></button>\\n    </div>\\n    <div class=\\\"motor\\\">\\n      <button type=\\\"button\\\" (click)=\\\"step(-10,2)\\\" name=\\\"decrement2\\\"><b>-</b></button> motor2: 0 - <b>{{motor2PWMModifier}}</b> - 100 <button type=\\\"button\\\" (click)=\\\"step(10,2)\\\" name=\\\"increment2\\\"><b>+</b></button>\\n    </div>\\n    <div class=\\\"motor\\\">\\n      <button type=\\\"button\\\" (click)=\\\"step(-10,3)\\\" name=\\\"decrement3\\\"><b>-</b></button> motor3: 0 - <b>{{motor3PWMModifier}}</b> - 100 <button type=\\\"button\\\" (click)=\\\"step(10,3)\\\" name=\\\"increment3\\\"><b>+</b></button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'homepage';\n  motor1PWMModifier=0;\n  motor2PWMModifier=0;\n  motor3PWMModifier=0;\n  host:string = \"http://127.0.0.1:8080\";\n\n  constructor(private http: HttpClient){\n    this.getStatus().subscribe((data)=>{\n      this.motor1PWMModifier = data[\"motor1\"];\n      this.motor2PWMModifier = data[\"motor2\"];\n      this.motor3PWMModifier = data[\"motor3\"];\n    })\n  }\n\n  step(number, motor){\n    console.log(\"changing motor \" + motor + \" PWM by \" + number);\n    this.writeStep({\"step\":number,\"motor\":motor}).subscribe((data)=>{\n      this.motor1PWMModifier = data[\"motor1\"];\n      this.motor2PWMModifier = data[\"motor2\"];\n      this.motor3PWMModifier = data[\"motor3\"];\n    });\n  }\n\n  getStatus(){\n    return this.http.get('/api/status')\n  }\n\n  writeStep(data){\n    return this.http.post('/api/step', data)\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}